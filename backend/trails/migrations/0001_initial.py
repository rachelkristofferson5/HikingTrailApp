# Generated by Django 5.2.6 on 2025-10-24 17:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tracking", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Park",
            fields=[
                ("park_id", models.AutoField(primary_key=True, serialize=False)),
                ("nps_park_code", models.CharField(max_length=10, unique=True)),
                ("park_name", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=100)),
                ("region", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("park_url", models.URLField(blank=True, max_length=500, null=True)),
                ("last_synced", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "parks",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("review_text", models.TextField()),
                ("visited_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SavedTrail",
            fields=[
                ("saved_id", models.AutoField(primary_key=True, serialize=False)),
                ("saved_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "saved_trails",
                "ordering": ["-saved_at"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="Trail",
            fields=[
                ("trail_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nps_trail_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("location", models.CharField(max_length=200)),
                (
                    "decimal_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "decimal_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("hard", "Hard"),
                            ("expert", "Expert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "decimal_length_miles",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("elevation_gain_ft", models.IntegerField(blank=True, null=True)),
                (
                    "estimated_duration_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("trail_type", models.CharField(blank=True, max_length=50)),
                (
                    "featured_photo_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("nps_data", models.JSONField(blank=True, null=True)),
                ("last_synced", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "trails",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrailCondition",
            fields=[
                ("condition_id", models.AutoField(primary_key=True, serialize=False)),
                ("condition_type", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("severity", models.CharField(max_length=50)),
                ("reported_date", models.DateField()),
                ("verified", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "trail_conditions",
                "ordering": ["-reported_date"],
            },
        ),
        migrations.CreateModel(
            name="TrailFeature",
            fields=[
                ("feature_id", models.AutoField(primary_key=True, serialize=False)),
                ("feature_type", models.CharField(blank=True, max_length=100)),
                ("feature_name", models.CharField(blank=True, max_length=255)),
                (
                    "decimal_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "decimal_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "trail_features",
            },
        ),
        migrations.CreateModel(
            name="TrailTag",
            fields=[
                ("trail_tag_id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "trail_tags",
            },
        ),
        migrations.CreateModel(
            name="Photo",
            fields=[
                ("photo_id", models.AutoField(primary_key=True, serialize=False)),
                ("photo_url", models.URLField(max_length=500)),
                ("caption", models.TextField(blank=True)),
                (
                    "decimal_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "decimal_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "hike",
                    models.ForeignKey(
                        blank=True,
                        db_column="int_hike_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="tracking.hike",
                    ),
                ),
            ],
            options={
                "db_table": "photos",
                "ordering": ["-uploaded_at"],
            },
        ),
    ]
