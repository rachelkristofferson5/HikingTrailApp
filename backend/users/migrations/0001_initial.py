# Generated by Django 5.2.6 on 2025-10-18 18:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Park",
            fields=[
                ("park_id", models.AutoField(primary_key=True, serialize=False)),
                ("nps_park_code", models.CharField(max_length=10, unique=True)),
                ("park_name", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=100)),
                ("region", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("park_url", models.URLField(blank=True, max_length=500, null=True)),
                ("last_synced", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "parks",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=255, unique=True)),
                (
                    "password_hash",
                    models.CharField(db_column="password_hash", max_length=255),
                ),
                ("full_name", models.CharField(blank=True, max_length=255)),
                (
                    "profile_photo_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        default="beginner",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Trail",
            fields=[
                ("trail_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nps_trail_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("location", models.CharField(max_length=200)),
                (
                    "decimal_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "decimal_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("hard", "Hard"),
                            ("expert", "Expert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "decimal_length_miles",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("elevation_gain_ft", models.IntegerField(blank=True, null=True)),
                (
                    "estimated_duration_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "featured_photo_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("nps_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "park",
                    models.ForeignKey(
                        db_column="park_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trails",
                        to="users.park",
                    ),
                ),
            ],
            options={
                "db_table": "trails",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserTrail",
            fields=[
                ("user_trail_id", models.AutoField(primary_key=True, serialize=False)),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "trail",
                    models.ForeignKey(
                        db_column="trail_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_by",
                        to="users.trail",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_trails",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_trails",
                "ordering": ["-completed_at"],
            },
        ),
    ]
